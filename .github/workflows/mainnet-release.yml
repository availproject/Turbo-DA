name: Production Release - Build and Push Docker Images

on:
  push:
    tags:
      - 'v*'
    paths:
      - 'prod-release.yml'

env:
  DOCKER_IMAGE: ${{ github.repository_owner }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [funds_monitor, fallback_monitor, turbo-da-core, data_submission]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata and set version
        id: meta
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          VERSION=${GITHUB_REF#refs/tags/v}
          
          echo "image=$REPO_OWNER/${{ matrix.service }}" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Get version for GitHub Release
        id: get_version
        if: ${{ matrix.service == 'funds_monitor' }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: ${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.version }},${{ steps.meta.outputs.image }}:latest
          cache-from: type=registry,ref=${{ steps.meta.outputs.image }}:prod-buildcache
          cache-to: type=registry,ref=${{ steps.meta.outputs.image }}:prod-buildcache,mode=max
          
      - name: Create GitHub Release
        if: ${{ matrix.service == 'funds_monitor' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with:
          body: |
            Release ${{ steps.get_version.outputs.VERSION }}
            
            ## Docker Images
            
            ```bash
            # Latest versions
            docker pull ${{ env.DOCKER_IMAGE }}/funds_monitor:latest
            docker pull ${{ env.DOCKER_IMAGE }}/fallback_monitor:latest
            docker pull ${{ env.DOCKER_IMAGE }}/turbo-da-core:latest
            docker pull ${{ env.DOCKER_IMAGE }}/data_submission:latest
            
            # Specific versions
            docker pull ${{ env.DOCKER_IMAGE }}/funds_monitor:${{ steps.get_version.outputs.VERSION }}
            docker pull ${{ env.DOCKER_IMAGE }}/fallback_monitor:${{ steps.get_version.outputs.VERSION }}
            docker pull ${{ env.DOCKER_IMAGE }}/turbo-da-core:${{ steps.get_version.outputs.VERSION }}
            docker pull ${{ env.DOCKER_IMAGE }}/data_submission:${{ steps.get_version.outputs.VERSION }}
            ```
