name: Staging Release

on:
  push:
    branches:
      - staging
    paths:
      - 'staging-release.yml'

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [funds_monitor, fallback_monitor, turbo-da-core, data_submission]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata and set version
        id: meta
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/\//-/g')
          COMMIT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          IMAGE_TAG="$BRANCH_NAME-$COMMIT_SHA"
          
          echo "image=$REPO_OWNER/${{ matrix.service }}" >> $GITHUB_OUTPUT
          echo "version=$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: ${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.version }},${{ steps.meta.outputs.image }}:staging-latest
          cache-from: type=registry,ref=${{ steps.meta.outputs.image }}:staging-buildcache
          cache-to: type=registry,ref=${{ steps.meta.outputs.image }}:staging-buildcache,mode=max
